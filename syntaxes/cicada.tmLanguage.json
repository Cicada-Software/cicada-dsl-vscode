{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Cicada",
	"patterns": [
		{"include": "#on"},
		{"include": "#run-on"},
		{"include": "#let"},
		{"include": "#fn"},
		{"include": "#fn-annotation"},
		{"include": "#for"},
		{"include": "#cache"},
		{"include": "#keywords"},
		{"include": "#strings"},
		{"include": "#numbers"},
		{"include": "#shell-func-call"},
		{"include": "#builtins"},
		{"include": "#globals"},
		{"include": "#types"},
		{"include": "#booleans"},
		{"include": "#comment"},
		{"include": "#ident"}
	],
	"repository": {
		"keywords": {
			"name": "keyword.control.cicada",
			"match": "\\b(and|break|cache|continue|fn|for|if|in|is|let|mod|mut|not|on|or|run_on|title|using|where|while|xor)\\b"
		},
		"expr": {
			"patterns": [
				{"include": "#numbers"},
				{"include": "#strings"},
				{"include": "#globals"},
				{"include": "#booleans"},
				{"include": "#ident"}
			]
		},
		"strings": {
			"name": "string.quoted.double.cicada",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.cicada",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.cicada",
			"patterns": [
				{
					"name": "constant.numeric.hex.cicada",
					"match": "[-+]?0[xX][0-9A-Fa-f_]+"
				},
				{
					"name": "constant.numeric.octal.cicada",
					"match": "[-+]?0[oO][0-7_]+"
				},
				{
					"name": "constant.numeric.binary.cicada",
					"match": "[-+]?0[bB][01_]+"
				},
				{
					"name": "constant.numeric.decimal.cicada",
					"match": "[-+]?([0-9_]+\\.)?[0-9_]+"
				}
			]
		},
		"shell-func-call": {
			"name": "meta.expr.shell-func-call.cicada",
			"begin": "\\b(cd|cp|echo|git|ls|make|mkdir|rm|shell)\\s+",
			"beginCaptures": {
				"1": {"name": "support.function.builtin.cicada"}
			},
			"patterns": [
				{"include": "#interpolated-arg"},
				{"include": "#strings"}
			],
			"end": "$"
		},
		"interpolated-arg": {
			"name": "meta.expr.interpolated-arg.cicada",
			"begin": "\\(",
			"patterns": [
				{"include": "#expr"}
			],
			"end": "\\)"
		},
		"builtins": {
			"name": "support.function.builtin.cicada",
			"match": "\\b(cd|cp|echo|git|ls|make|mkdir|rm|shell|hashOf|print)\\b"
		},
		"globals": {
			"name": "variable.language.cicada",
			"match": "\\b(env|event|secret)\\b"
		},
		"on": {
			"name": "meta.stmts.on.cicada",
			"match": "(on)\\s+(git.push|issue.open|issue.close)\\s+((where)\\s+)",
			"captures": {
				"1": {"name": "keyword.control.cicada"},
				"2": {"name": "constant.language.cicada"},
				"4": {"name": "keyword.control.cicada"}
			}
		},
		"run-on": {
			"name": "meta.stmts.run-on.cicada",
			"match": "(run_on)\\s+((self_hosted)|((image)\\s+(\\S+)))",
			"captures": {
				"1": {"name": "keyword.control.cicada"},
				"3": {"name": "constant.language.cicada"},
				"5": {"name": "constant.language.cicada"}
			}
		},
		"let": {
			"name": "meta.stmts.let.cicada",
			"match": "(let)\\s+(mut)?\\s*([A-Za-z0-9_]+)\\s+(=)",
			"captures": {
				"1": {"name": "storage.type.cicada"},
				"2": {"name": "keyword.control.cicada"},
				"3": {"name": "variable.other.cicada"},
				"4": {"name": "keyword.operator.cicada"}
			}
		},
		"fn": {
			 "name": "meta.stmts.fn.cicada",
			 "patterns": [
				{
					"name": "meta.stmts.fn.cicada",
					"begin": "(fn)\\s+([A-Za-z0-9_]+)\\(",
					"beginCaptures": {
						"1": {"name": "storage.type.cicada"},
						"2": {"name": "entity.name.function.cicada"}
					},
					"end": "\\)\\s*(->\\s*([A-Za-z0-9_]+))?\\s*:",
					"endCaptures": {
						"2": {"name": "support.type.cicada"}
					},
					"patterns": [
						{"include": "#function-param"},
						{"include": "#function-param-annotation"}
					]
				}
			]
		},
		"fn-annotation": {
			"name": "entity.name.function.decorator.cicada",
			"match": "@[A-Za-z0-9_]+"
		},
		"function-param": {
			"name": "meta.stmts.fn.param.cicada",
			"match": "([A-Za-z0-9_]+)",
			"captures": {
				"1": {"name": "variable.other.cicada"}
			}
		},
		"function-param-annotation": {
			"name": "meta.stmts.fn.param-annotation.cicada",
			"match": ":\\s*([A-Za-z0-9_]+)",
			"captures": {
				"1": {"name": "support.type.cicada"}
			}
		},
		"for": {
			 "name": "meta.stmts.for.cicada",
			 "patterns": [
				{
					"name": "meta.stmts.for.cicada",
					"begin": "(for)\\s+([A-Za-z0-9_]+)\\s+(in)",
					"beginCaptures": {
						"1": {"name": "keyword.control.cicada"},
						"2": {"name": "variable.other.cicada"},
						"3": {"name": "keyword.control.cicada"}
					},
					"patterns": [
						{"include": "#expr"}
					],
					"end": "(:|$)"
				}
			]
		},
		"cache": {
			 "name": "meta.stmts.cache.cicada",
			 "patterns": [
				{
					"name": "meta.stmts.cache.cicada",
					"begin": "(cache)\\s+",
					"beginCaptures": {
						"1": {"name": "keyword.control.cicada"}
					},
					"end": "((using)|$)",
					"endCaptures": {
						"2": {"name": "keyword.control.cicada"}
					}
				}
			]
		},
		"booleans": {
			"name": "constant.language.cicada",
			"match": "\\b(true|false)\\b"
		},
		"types": {
			"name": "support.type.cicada",
			"match": "\\b(number|string|\\(\\)|bool)\\b"
		},
		"comment": {
			"name": "comment.line.number-sign.cicada",
			"match": "#.*$"
		},
		"ident": {
			"name": "variable.other.cicada",
			"match": "[A-Za-z0-9_]+"
		}
	},
	"scopeName": "source.cicada"
}
